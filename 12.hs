{-

https://projecteuler.net/problem=12

	The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

	Let us list the factors of the first seven triangle numbers:

	 1: 1
	 3: 1,3
	 6: 1,2,3,6
	10: 1,2,5,10
	15: 1,3,5,15
	21: 1,3,7,21
	28: 1,2,4,7,14,28
	We can see that 28 is the first triangle number to have over five divisors.

	What is the value of the first triangle number to have over five hundred divisors?

-}

triangulars = [ quot (n * (n+1))  2 | n <- [1..] ]

{-

divisor_list :: Int -> [Int] -> [Int]
divisor_list n [] = []
divisor_list n (x:xs)
	| mod n x == 0	= x : (quot n x) : (divisor_list n xs)
	| otherwise		= divisor_list n xs

divisors :: Int -> [Int]
divisors n = divisor_list n [ 1 .. floor(sqrt(fromIntegral(n))) ]

-}

divisors n = [ d | d <- [ 1 .. floor(sqrt(fromIntegral(n))) ], mod n d == 0 ]

take_while_plus_one check [] = []
take_while_plus_one check (x:xs)
	| check x	= x : take_while_plus_one check xs
	| otherwise	= [ x ]

-- answer n = take_while_plus_one (\t -> length(divisors t) <= n) triangulars
answer n = last(take_while_plus_one (\t -> length(divisors t) <= (quot n 2)) triangulars)

{-

*Main> answer 500
76576500

-}
